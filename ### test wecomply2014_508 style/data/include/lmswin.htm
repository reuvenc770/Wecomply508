<html>
<head>
<script type="text/javascript" src="debugController.js"></script>
<script type="text/javascript" src="aicc_client.js"></script>
<script type="text/javascript" src="lms_util.js"></script>
<script type="text/vbscript">
'------------------------------------------------------------
' Module:   HTTP.VBS
'
' Purpose:  Utility functions for implementing HTTP communication from the client
'
' Author:   David Rubin
'           Adapted from AICC_CLIENT.VBS
' Date:     10/23/02
'------------------------------------------------------------


' Function: xmlHTTPAvail
'
' Purpose:  Determine if XMLHTTP component is installed
'
'
Function xmlHTTPAvail()
	Dim objHttp

	On Error Resume Next
	xmlHTTPAvail = True
	Set objHttp = CreateObject("Microsoft.XMLHTTP")
	If Err.number <> 0 Then
		Err.Clear
		Set objHttp = CreateObject("MSXML2.XMLHTTP")
	End If
	If Err.number <> 0 Then
		xmlHTTPAvail = False
	End If
	Set objHttp = Nothing
End Function

' Function: xmlHTTPPost
'
' Purpose:  POST a form to a web page and retrieve the result
'
Function xmlHTTPPost(strURL, strData)
	Dim objHttp

	On Error Resume Next
	xmlHTTPPost = ""
	Set objHttp = CreateObject("Microsoft.XMLHTTP")
	If Err.number <> 0 Then
		Err.Clear
		Set objHttp = CreateObject("MSXML2.XMLHTTP")
	End If
	If Err.number <> 0 Then
		MsgBox "Error creating XMLHTTP object"
		Err.Clear
		Exit Function
	End If
	objHttp.Open "POST", strURL, False
	If Err.number <> 0 Then
rem		MsgBox "Error " & Hex(Err.number) & " connecting to server:" & vbCrLf & Err.description
		Err.Clear
		Set objHttp = Nothing
		Exit Function
	End If
' This is to take the user agent out if we are talking to complii, who has an lms that doesn't like it
Set myRegExp = New RegExp
myRegExp.IgnoreCase = True
myRegExp.Global = True
myRegExp.Pattern = "compli"
	if (myRegExp.test(strURL)) then
'	objHttp.setRequestHeader "User-Agent", "Mozilla Compatible (MS IE 3.01 WinNT)"
'MsgBox "match complii"
	else
	objHttp.setRequestHeader "User-Agent", "Mozilla Compatible (MS IE 3.01 WinNT)"
'MsgBox "not match complii"
	end if

	objHttp.setRequestHeader "Content-Type", "application/x-www-form-urlencoded"
	objHttp.Send strData
	If Err.number <> 0 Then
rem		MsgBox "Error " & Hex(Err.number) & " sending to server:" & vbCrLf & Err.description
		Err.Clear
	Else
		xmlHTTPPost = objHttp.responseText
	End If
	Set objHttp = Nothing
End Function



</script>
<script type="text/javascript">
    //commtent out to ensure we get errors if something is still using the old debug method
    //var DEBUG_MODE = false;

var newWindow;			// Used later by the popup game window

var bReady = false;
var bFinished = false;
var bEnded = false;
var bNoLMS = false;
var bFailed = false;
var last_bookmark = "0";
var objInfo = null;
var delayStart = 100;
var finishTries = 0;
var bHasConnectitivity = true;
var issurveychapter = false;

function init()
{
	if (delayStart > 0)
	{
		var delay = delayStart;
		delayStart = 0;
		setTimeout("init()", delay);
		return;
	}

	if (location.search.indexOf("debug=1") != -1)
	    debugController.active = true;

	if (location.search.indexOf("debugMode=0") != -1)
	    debugController.setMode(0);
	else if (location.search.indexOf("debugMode=1") != -1)
	    debugController.setMode(1);
	else if (location.search.indexOf("debugMode=2") != -1)
		debugController.setMode(2);
	else if (location.search.indexOf("debugMode=3") != -1)
		debugController.setMode(3);
	bReady = true;
}

function earlyExit()
{
	if (!bFinished && typeof(objInfo) == "object" && objInfo != null && objInfo.startTime)
	{
		//objInfo.score = 0;
		objInfo.status = "incomplete";
		objInfo.bookmark = last_bookmark;
		var result = onLMSFinish(objInfo);
		//alert(result);
		bFinished = true;
	}
	end();
}

function finish(correctQ, totalQ)
{
	var result = 0;

	if (!bFinished && typeof(objInfo) == "object" && objInfo != null)
	{
		var ratio = totalQ/correctQ;
		var score = totalQ/(ratio*ratio);
//		objInfo.score = Math.round(score * 100);
//		objInfo.scoreMax = correctQ * 100;
//		objInfo.score = Math.round(score * 100);
//		objInfo.scoreMax = correctQ * 100;
		objInfo.score = Math.round(correctQ * 100 / totalQ);
		objInfo.scoreMax =  100;

		objInfo.scoreMin = 0;
		objInfo.status = bFailed ? "failed" : "passed";
		result = onLMSFinish(objInfo);
		//alert(result);
/*
		while (result == false)
		{
			if (++finishTries > 10)
			{
				alert("Error reporting completion status to server.\nPlease print the Certificate of Completion and present it to the training administrator\nto ensure that you receive proper credit for this program.");
				result = true;
			}
			else
				result = onLMSFinish(objInfo);
		}				
		bFinished = true;
*/
		while (result != 0 && ++finishTries < 10)
		{
			result = onLMSFinish(objInfo);
		}				
		
		if (0 == result)
			bFinished = true;
	}

	return result;
}

function progress(bookmark,qrevid,qchoice)
{

	var result = 0;
//alert("running progress");
    if (issurveychapter) {
//         alert("skipping bookmark for survey chapter");
    } else {
	
	if (!bFinished && typeof(objInfo) == "object" && objInfo != null)
	{
		objInfo.status = "incomplete";
		objInfo.bookmark = bookmark;
		last_bookmark = bookmark;
		objInfo.qrevid = qrevid;
		objInfo.qchoice = qchoice;
		result = onLMSProgress(objInfo);
//		alert("result" + result);
//alert("called progress " + boomark + " qrev " + qrevid + " choice " + qchoice);
	}
    } 
    issurveychapter = false;
	
	return result;
}

function svprogress(bookmark,svrevid,svchoices,svresponse)
{

	issurveychapter = true;
	var result = 0;

// do this so we don't advance the bookmark on a survey response
        bookmark = last_bookmark;
	
	if (!bFinished && typeof(objInfo) == "object" && objInfo != null)
	{
		objInfo.status = "incomplete";
		objInfo.bookmark = bookmark;
		last_bookmark = bookmark;
		objInfo.svrevid = svrevid;
		objInfo.svchoices = svchoices;
		objInfo.svresponse = svresponse;

		// this is the same check done later in aicc to see whether to add SVAN to the request
                if (objInfo.svrevid && (objInfo.svchoices || objInfo.svresponse)) {
		result = onLMSProgress(objInfo);
		} else {
		// getting a bad survey result ala baxter, do alert then exit
                // right here I could fill obInfo with debug info, and do a call to onLMSProgress, could just confuse things
		//alert("corrupt survey result, likely flash player issue, the remainder of your course will not be tracked.  Please exit window and try again.");
		objInfo.svrevid = "";
		objInfo.svchoices = "";
		objInfo.svresponse = "";
               // bFinished = true;
                
		}
		//doHTTPPost("http://training.wecomply.com/wc2/badsurvey.aspx", "")
		//alert("svresult " + result);
		// always clear out these fields

		objInfo.svrevid = "";
		objInfo.svchoices = "";
		objInfo.svresponse = "";
	}
	
	return result;
}

function fail(bExit)
{
	if (!bExit)
	{
		bFailed = true;
		return;
	}
	if (!bFinished && typeof(objInfo) == "object" && objInfo != null)
	{
		objInfo.score = 0;
		objInfo.status = "failed";
		var result = onLMSFinish(objInfo);
		//alert(result);
		bFinished = true;
	}
	end();
}

function end()
{
	if (!bEnded && typeof(objInfo) == "object" && objInfo != null)
	{
		var result = onLMSEnd(objInfo);
		//alert(result);
		bEnded = true;
	}
}

</script>
</head>
<body bgcolor="#ffffff" topmargin=0 leftmargin=0 onLoad="init()" onUnload="earlyExit()">
</body>
</html>
